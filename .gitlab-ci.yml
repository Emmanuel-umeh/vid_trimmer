image: golang:latest
stages:
  - test
  - build
  - staging
  - production

go_test:
  stage: test
  script:
    - go build
    # - go test -timeout 30s ./... -run  -v -tags "test"
    - echo done

repo_push_stage:
  stage: build
  image: docker:19.03.0
  services:
    - docker:18.09.7-dind

  script:
    - docker login --username=_ --password=${HEROKU_API_KEY} ${REGISTRY_URL}
    - docker build  -t ${APP_STAGE} .
    - docker tag "${APP_STAGE}:latest" ${REGISTRY_URL}/${APP_STAGE}/web
    - docker push ${REGISTRY_URL}/${APP_STAGE}/web
  only:
    - master

staging_deploy:
  image: node
  stage: staging
  before_script:
    - npm install -g heroku
  script:
    - heroku container:release web -a ${APP_STAGE}

  only:
    - master

repo_push:
  stage: build
  image: docker:19.03.0
  services:
    - docker:18.09.7-dind

  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login --username=_ --password=${HEROKU_API_KEY} ${REGISTRY_URL}
    - docker build  -t ${APP} .
    - docker tag "${APP}:latest" ${REGISTRY_URL}/${APP}/web
    - docker push ${REGISTRY_URL}/${APP}/web
  only:
    - tags

production_deploy:
  image: node
  stage: production
  before_script:
    - npm install -g heroku
  script:
    - heroku container:release web -a ${APP}
  only:
    - tags
